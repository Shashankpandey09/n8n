
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  createdAt: 'createdAt'
};

exports.Prisma.WorkflowScalarFieldEnum = {
  id: 'id',
  title: 'title',
  enabled: 'enabled',
  nodes: 'nodes',
  connections: 'connections',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebhookScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  path: 'path',
  method: 'method',
  secret: 'secret',
  createdAt: 'createdAt'
};

exports.Prisma.OutboxScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  executionId: 'executionId',
  status: 'status'
};

exports.Prisma.CredentialScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  title: 'title',
  platform: 'platform',
  data: 'data',
  verified: 'verified',
  createdAt: 'createdAt'
};

exports.Prisma.ExecutionScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  status: 'status',
  input: 'input',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExecutionTaskScalarFieldEnum = {
  id: 'id',
  executionId: 'executionId',
  nodeId: 'nodeId',
  status: 'status',
  attempts: 'attempts',
  input: 'input',
  output: 'output',
  error: 'error',
  startedAt: 'startedAt',
  finishedAt: 'finishedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ExecutionStatus = exports.$Enums.ExecutionStatus = {
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SUCCESS: 'SUCCESS',
  FAILED: 'FAILED'
};

exports.TaskStatus = exports.$Enums.TaskStatus = {
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SUCCESS: 'SUCCESS',
  FAILED: 'FAILED'
};

exports.OutboxEnum = exports.$Enums.OutboxEnum = {
  UNSENT: 'UNSENT',
  SENT: 'SENT'
};

exports.Prisma.ModelName = {
  User: 'User',
  Workflow: 'Workflow',
  Webhook: 'Webhook',
  Outbox: 'Outbox',
  Credential: 'Credential',
  Execution: 'Execution',
  ExecutionTask: 'ExecutionTask'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\shash\\n8n\\common\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\shash\\n8n\\common\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum ExecutionStatus {\n  PENDING\n  RUNNING\n  SUCCESS\n  FAILED\n}\n\nenum TaskStatus {\n  PENDING\n  RUNNING\n  SUCCESS\n  FAILED\n}\n\nenum OutboxEnum {\n  UNSENT\n  SENT\n}\n\nmodel User {\n  id          Int          @id @default(autoincrement())\n  email       String       @unique\n  name        String?\n  password    String\n  workflows   Workflow[]\n  credentials Credential[]\n  createdAt   DateTime     @default(now())\n}\n\nmodel Workflow {\n  id          Int         @id @default(autoincrement())\n  title       String?\n  enabled     Boolean     @default(true)\n  nodes       Json\n  connections Json\n  userId      Int\n  user        User        @relation(fields: [userId], references: [id])\n  createdAt   DateTime    @default(now())\n  updatedAt   DateTime    @updatedAt\n  Webhooks    Webhook?\n  Executions  Execution[]\n  outbox      Outbox[]\n}\n\nmodel Webhook {\n  id         Int      @id @default(autoincrement())\n  workflow   Workflow @relation(fields: [workflowId], references: [id])\n  workflowId Int      @unique\n  path       String   @unique // e.g. /webhook/abcd123\n  method     String // \"POST\", \"GET\", etc.\n  secret     String? // optional server-generated secret for signature verification\n  createdAt  DateTime @default(now())\n\n  @@index([workflowId])\n}\n\nmodel Outbox {\n  id          Int        @id @default(autoincrement())\n  workflow    Workflow   @relation(fields: [workflowId], references: [id])\n  workflowId  Int\n  executionId Int        @unique\n  status      OutboxEnum @default(UNSENT)\n\n  // topic      String   // e.g. \"runExecution\"\n  // payload    Json\n  // createdAt  DateTime @default(now())\n  // processed  Boolean  @default(false)\n  // processedAt DateTime?\n  // tries      Int      @default(0)\n  // index on processed to speed sweeper\n  @@index([workflowId])\n}\n\nmodel Credential {\n  id        Int      @id @default(autoincrement())\n  owner     User     @relation(fields: [ownerId], references: [id])\n  ownerId   Int\n  title     String?\n  platform  String   @unique // e.g. \"telegram\", \"resend\", \"openai\"\n  data      String // encrypted JSON blob (AES-GCM recommended)\n  verified  Boolean  @default(false)\n  createdAt DateTime @default(now())\n\n  @@index([ownerId])\n}\n\nmodel Execution {\n  id         Int             @id @default(autoincrement())\n  workflow   Workflow        @relation(fields: [workflowId], references: [id])\n  workflowId Int\n  status     ExecutionStatus @default(PENDING)\n  input      Json?\n  // result     Json?\n  tasks      ExecutionTask[]\n  createdAt  DateTime        @default(now())\n  updatedAt  DateTime        @updatedAt\n\n  @@index([workflowId, status])\n  @@index([createdAt])\n}\n\nmodel ExecutionTask {\n  id          Int        @id @default(autoincrement())\n  execution   Execution  @relation(fields: [executionId], references: [id])\n  executionId Int\n  nodeId      String // node id from workflow.nodes\n  status      TaskStatus @default(PENDING)\n  attempts    Int        @default(0)\n  input       Json?\n  output      Json?\n  error       String?\n  startedAt   DateTime?\n  finishedAt  DateTime?\n\n  @@index([executionId, nodeId])\n  @@index([status])\n}\n",
  "inlineSchemaHash": "b8f979790723e65083e8f298c22a076a0c16bb464c26a3658cd7e118e06b13e5",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflows\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"UserToWorkflow\"},{\"name\":\"credentials\",\"kind\":\"object\",\"type\":\"Credential\",\"relationName\":\"CredentialToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Workflow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"nodes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"connections\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkflow\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Webhooks\",\"kind\":\"object\",\"type\":\"Webhook\",\"relationName\":\"WebhookToWorkflow\"},{\"name\":\"Executions\",\"kind\":\"object\",\"type\":\"Execution\",\"relationName\":\"ExecutionToWorkflow\"},{\"name\":\"outbox\",\"kind\":\"object\",\"type\":\"Outbox\",\"relationName\":\"OutboxToWorkflow\"}],\"dbName\":null},\"Webhook\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"WebhookToWorkflow\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Outbox\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"OutboxToWorkflow\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"executionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OutboxEnum\"}],\"dbName\":null},\"Credential\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CredentialToUser\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Execution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"ExecutionToWorkflow\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExecutionStatus\"},{\"name\":\"input\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"ExecutionTask\",\"relationName\":\"ExecutionToExecutionTask\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ExecutionTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"execution\",\"kind\":\"object\",\"type\":\"Execution\",\"relationName\":\"ExecutionToExecutionTask\"},{\"name\":\"executionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TaskStatus\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"input\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"output\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"finishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

